[{"body":"private   Task   —   parametric type A  Task A  Task  represents a mapping from high - level types  I  to  O .  The learnable part of the mapping is from types  X  to  Y . To give an example, image classification is task that maps images to classes (represented as a matrix of pixels and an integer) .  As inputs and outputs to the learning algorithm, a more optimization - friendly form is used: the image is converted to a normalized 3D array with dimensions (h, w, ch) and the class is converted to a one - hot encoded vector . So, for image classification, we have: In this representation, the pieces to build a training and inference pipeline can be cleanly separated . The first is encoding, i . e .  mapping  I  to  X  and  O  to  Y . The second is decoding, i . e .  mapping Y  - > O . Both of these can highly configurable .  For encoding an input image, we may want to resizing and some stochastic data augmentation, but not during inference . Any configuration/hyperparameters should be stored in the  Task struct which is passed to every method .","id":"docstrings/DLPipelines.Task.html"},{"body":"public   encodetarget   —   function Encode  target  into a representation that a model for  task  outputs .","id":"docstrings/DLPipelines.encodetarget.html"},{"body":"DLPipelines","id":"README.html#dlpipelines"},{"body":"public   decodeoutput   —   function","id":"docstrings/DLPipelines.decodeoutput.html"},{"body":"private   ImagePreprocessing   —   struct Converts an image to a color, then to a 3D - tensor and finally normalizes the values using  means  and  stds . If no  means  or  stds  are given, use ImageNet statistics .","id":"docstrings/DLPipelines.ImagePreprocessing.html"},{"body":"public   encodeinput   —   function Encode  input  into a representation that a model for  task takes as input .","id":"docstrings/DLPipelines.encodeinput.html"},{"body":"private   SpatialTransforms   —   struct","id":"docstrings/DLPipelines.SpatialTransforms.html"},{"body":"public   encode   —   function Encode a  sample  containing both input and target into representations that a model for  task  takes in and outputs, respectively . If  sample  is a  Tuple  of (input, target), the default behavior is to pass them to  encodeinput  and  encodetarget","id":"docstrings/DLPipelines.encode.html"}]